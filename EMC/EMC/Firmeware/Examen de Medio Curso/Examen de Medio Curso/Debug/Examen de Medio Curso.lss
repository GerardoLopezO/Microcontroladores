
Examen de Medio Curso.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000490  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000004e4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000514  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  00000554  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b6b  00000000  00000000  000005b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000070d  00000000  00000000  0000111f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000672  00000000  00000000  0000182c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a4  00000000  00000000  00001ea0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000410  00000000  00000000  00001f44  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000048e  00000000  00000000  00002354  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  000027e2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3b 00 	jmp	0x76	; 0x76 <__ctors_end>
   4:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
   8:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
   c:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  10:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  14:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  18:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  1c:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  20:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  24:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  28:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  2c:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  30:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  34:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  38:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  3c:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  40:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  44:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  48:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  4c:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  50:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  54:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  58:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  5c:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  60:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  64:	0c 94 45 00 	jmp	0x8a	; 0x8a <__bad_interrupt>
  68:	42 01       	movw	r8, r4
  6a:	58 01       	movw	r10, r16
  6c:	6e 01       	movw	r12, r28
  6e:	84 01       	movw	r16, r8
  70:	9a 01       	movw	r18, r20
  72:	af 01       	movw	r20, r30
  74:	c5 01       	movw	r24, r10

00000076 <__ctors_end>:
  76:	11 24       	eor	r1, r1
  78:	1f be       	out	0x3f, r1	; 63
  7a:	cf ef       	ldi	r28, 0xFF	; 255
  7c:	d8 e0       	ldi	r29, 0x08	; 8
  7e:	de bf       	out	0x3e, r29	; 62
  80:	cd bf       	out	0x3d, r28	; 61
  82:	0e 94 0c 02 	call	0x418	; 0x418 <main>
  86:	0c 94 46 02 	jmp	0x48c	; 0x48c <_exit>

0000008a <__bad_interrupt>:
  8a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000008e <init_ports>:
void init_ports(void)
{
	
	//-- Definir entradas y salidas
	//- Inputs (colocamos 0)
	BTN_DDRX &= ~(1<<BTN_0); //
  8e:	87 b1       	in	r24, 0x07	; 7
  90:	8e 7f       	andi	r24, 0xFE	; 254
  92:	87 b9       	out	0x07, r24	; 7
	BTN_DDRX &= ~(1<<BTN_1); //
  94:	87 b1       	in	r24, 0x07	; 7
  96:	8d 7f       	andi	r24, 0xFD	; 253
  98:	87 b9       	out	0x07, r24	; 7
	BTN_DDRX &= ~(1<<BTN_2);
  9a:	87 b1       	in	r24, 0x07	; 7
  9c:	8b 7f       	andi	r24, 0xFB	; 251
  9e:	87 b9       	out	0x07, r24	; 7
	
	//-- Init Entrada y Salidas
	//- Inputs
	BTN_PORTX |=  (1<<BTN_0);//
  a0:	88 b1       	in	r24, 0x08	; 8
  a2:	81 60       	ori	r24, 0x01	; 1
  a4:	88 b9       	out	0x08, r24	; 8
	BTN_PORTX |=  (1<<BTN_1);// P
  a6:	88 b1       	in	r24, 0x08	; 8
  a8:	82 60       	ori	r24, 0x02	; 2
  aa:	88 b9       	out	0x08, r24	; 8
	BTN_PORTX |=  (1<<BTN_2);
  ac:	88 b1       	in	r24, 0x08	; 8
  ae:	84 60       	ori	r24, 0x04	; 4
  b0:	88 b9       	out	0x08, r24	; 8
	
	
	//--Outputs
	DDRD  |=  (_BV(SEGA) | _BV(SEGB));
  b2:	8a b1       	in	r24, 0x0a	; 10
  b4:	8c 60       	ori	r24, 0x0C	; 12
  b6:	8a b9       	out	0x0a, r24	; 10
	DDRD  |=  (_BV(SEGC) | _BV(SEGD));
  b8:	8a b1       	in	r24, 0x0a	; 10
  ba:	80 63       	ori	r24, 0x30	; 48
  bc:	8a b9       	out	0x0a, r24	; 10
	DDRD  |=  (_BV(SEGE) | _BV(SEGF));
  be:	8a b1       	in	r24, 0x0a	; 10
  c0:	80 6c       	ori	r24, 0xC0	; 192
  c2:	8a b9       	out	0x0a, r24	; 10
	DDRB  |=  _BV(SEGG);
  c4:	84 b1       	in	r24, 0x04	; 4
  c6:	81 60       	ori	r24, 0x01	; 1
  c8:	84 b9       	out	0x04, r24	; 4
	
	//-Apagados
	PORTD  &= ~(_BV(SEGA) | _BV(SEGB) | _BV(SEGC) | _BV(SEGD));
  ca:	8b b1       	in	r24, 0x0b	; 11
  cc:	83 7c       	andi	r24, 0xC3	; 195
  ce:	8b b9       	out	0x0b, r24	; 11
	PORTD  &= ~(_BV(SEGE) | _BV(SEGF));
  d0:	8b b1       	in	r24, 0x0b	; 11
  d2:	8f 73       	andi	r24, 0x3F	; 63
  d4:	8b b9       	out	0x0b, r24	; 11
	PORTB  &= ~_BV(SEGG);
  d6:	85 b1       	in	r24, 0x05	; 5
  d8:	8e 7f       	andi	r24, 0xFE	; 254
  da:	85 b9       	out	0x05, r24	; 5
  dc:	08 95       	ret

000000de <LED_prendidos>:
	
}

void LED_prendidos()
{
	LED1_ON;
  de:	88 b1       	in	r24, 0x08	; 8
  e0:	88 60       	ori	r24, 0x08	; 8
  e2:	88 b9       	out	0x08, r24	; 8
	LED2_ON;
  e4:	88 b1       	in	r24, 0x08	; 8
  e6:	80 61       	ori	r24, 0x10	; 16
  e8:	88 b9       	out	0x08, r24	; 8
	LED3_ON;
  ea:	88 b1       	in	r24, 0x08	; 8
  ec:	80 62       	ori	r24, 0x20	; 32
  ee:	88 b9       	out	0x08, r24	; 8
	LED4_ON;
  f0:	85 b1       	in	r24, 0x05	; 5
  f2:	82 60       	ori	r24, 0x02	; 2
  f4:	85 b9       	out	0x05, r24	; 5
  f6:	08 95       	ret

000000f8 <contador_asc>:
	
}
void contador_asc()//
{
	LED1_ON;
  f8:	88 b1       	in	r24, 0x08	; 8
  fa:	88 60       	ori	r24, 0x08	; 8
  fc:	88 b9       	out	0x08, r24	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  fe:	2f ef       	ldi	r18, 0xFF	; 255
 100:	87 e8       	ldi	r24, 0x87	; 135
 102:	93 e1       	ldi	r25, 0x13	; 19
 104:	21 50       	subi	r18, 0x01	; 1
 106:	80 40       	sbci	r24, 0x00	; 0
 108:	90 40       	sbci	r25, 0x00	; 0
 10a:	e1 f7       	brne	.-8      	; 0x104 <contador_asc+0xc>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <contador_asc+0x16>
 10e:	00 00       	nop
	_delay_ms(TIEMPO);
	LED2_ON;
 110:	88 b1       	in	r24, 0x08	; 8
 112:	80 61       	ori	r24, 0x10	; 16
 114:	88 b9       	out	0x08, r24	; 8
 116:	2f ef       	ldi	r18, 0xFF	; 255
 118:	87 e8       	ldi	r24, 0x87	; 135
 11a:	93 e1       	ldi	r25, 0x13	; 19
 11c:	21 50       	subi	r18, 0x01	; 1
 11e:	80 40       	sbci	r24, 0x00	; 0
 120:	90 40       	sbci	r25, 0x00	; 0
 122:	e1 f7       	brne	.-8      	; 0x11c <contador_asc+0x24>
 124:	00 c0       	rjmp	.+0      	; 0x126 <contador_asc+0x2e>
 126:	00 00       	nop
	_delay_ms(TIEMPO);
	LED3_ON;
 128:	88 b1       	in	r24, 0x08	; 8
 12a:	80 62       	ori	r24, 0x20	; 32
 12c:	88 b9       	out	0x08, r24	; 8
 12e:	2f ef       	ldi	r18, 0xFF	; 255
 130:	87 e8       	ldi	r24, 0x87	; 135
 132:	93 e1       	ldi	r25, 0x13	; 19
 134:	21 50       	subi	r18, 0x01	; 1
 136:	80 40       	sbci	r24, 0x00	; 0
 138:	90 40       	sbci	r25, 0x00	; 0
 13a:	e1 f7       	brne	.-8      	; 0x134 <contador_asc+0x3c>
 13c:	00 c0       	rjmp	.+0      	; 0x13e <contador_asc+0x46>
 13e:	00 00       	nop
	_delay_ms(TIEMPO);
	LED4_ON;
 140:	85 b1       	in	r24, 0x05	; 5
 142:	82 60       	ori	r24, 0x02	; 2
 144:	85 b9       	out	0x05, r24	; 5
 146:	2f ef       	ldi	r18, 0xFF	; 255
 148:	87 e8       	ldi	r24, 0x87	; 135
 14a:	93 e1       	ldi	r25, 0x13	; 19
 14c:	21 50       	subi	r18, 0x01	; 1
 14e:	80 40       	sbci	r24, 0x00	; 0
 150:	90 40       	sbci	r25, 0x00	; 0
 152:	e1 f7       	brne	.-8      	; 0x14c <contador_asc+0x54>
 154:	00 c0       	rjmp	.+0      	; 0x156 <contador_asc+0x5e>
 156:	00 00       	nop
	_delay_ms(TIEMPO);
	LED1_OFF;
 158:	88 b1       	in	r24, 0x08	; 8
 15a:	87 7f       	andi	r24, 0xF7	; 247
 15c:	88 b9       	out	0x08, r24	; 8
	LED2_OFF;
 15e:	88 b1       	in	r24, 0x08	; 8
 160:	8f 7e       	andi	r24, 0xEF	; 239
 162:	88 b9       	out	0x08, r24	; 8
	LED3_OFF;
 164:	88 b1       	in	r24, 0x08	; 8
 166:	8f 7d       	andi	r24, 0xDF	; 223
 168:	88 b9       	out	0x08, r24	; 8
	LED4_OFF;
 16a:	85 b1       	in	r24, 0x05	; 5
 16c:	8d 7f       	andi	r24, 0xFD	; 253
 16e:	85 b9       	out	0x05, r24	; 5
 170:	2f ef       	ldi	r18, 0xFF	; 255
 172:	87 e8       	ldi	r24, 0x87	; 135
 174:	93 e1       	ldi	r25, 0x13	; 19
 176:	21 50       	subi	r18, 0x01	; 1
 178:	80 40       	sbci	r24, 0x00	; 0
 17a:	90 40       	sbci	r25, 0x00	; 0
 17c:	e1 f7       	brne	.-8      	; 0x176 <contador_asc+0x7e>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <contador_asc+0x88>
 180:	00 00       	nop
 182:	08 95       	ret

00000184 <contador_dsc>:
	_delay_ms(TIEMPO);
}
void contador_dsc()//
{
	LED4_ON;
 184:	85 b1       	in	r24, 0x05	; 5
 186:	82 60       	ori	r24, 0x02	; 2
 188:	85 b9       	out	0x05, r24	; 5
 18a:	2f ef       	ldi	r18, 0xFF	; 255
 18c:	87 e8       	ldi	r24, 0x87	; 135
 18e:	93 e1       	ldi	r25, 0x13	; 19
 190:	21 50       	subi	r18, 0x01	; 1
 192:	80 40       	sbci	r24, 0x00	; 0
 194:	90 40       	sbci	r25, 0x00	; 0
 196:	e1 f7       	brne	.-8      	; 0x190 <contador_dsc+0xc>
 198:	00 c0       	rjmp	.+0      	; 0x19a <contador_dsc+0x16>
 19a:	00 00       	nop
	_delay_ms(TIEMPO);
	LED3_ON;
 19c:	88 b1       	in	r24, 0x08	; 8
 19e:	80 62       	ori	r24, 0x20	; 32
 1a0:	88 b9       	out	0x08, r24	; 8
 1a2:	2f ef       	ldi	r18, 0xFF	; 255
 1a4:	87 e8       	ldi	r24, 0x87	; 135
 1a6:	93 e1       	ldi	r25, 0x13	; 19
 1a8:	21 50       	subi	r18, 0x01	; 1
 1aa:	80 40       	sbci	r24, 0x00	; 0
 1ac:	90 40       	sbci	r25, 0x00	; 0
 1ae:	e1 f7       	brne	.-8      	; 0x1a8 <contador_dsc+0x24>
 1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <contador_dsc+0x2e>
 1b2:	00 00       	nop
	_delay_ms(TIEMPO);
	LED2_ON;
 1b4:	88 b1       	in	r24, 0x08	; 8
 1b6:	80 61       	ori	r24, 0x10	; 16
 1b8:	88 b9       	out	0x08, r24	; 8
 1ba:	2f ef       	ldi	r18, 0xFF	; 255
 1bc:	87 e8       	ldi	r24, 0x87	; 135
 1be:	93 e1       	ldi	r25, 0x13	; 19
 1c0:	21 50       	subi	r18, 0x01	; 1
 1c2:	80 40       	sbci	r24, 0x00	; 0
 1c4:	90 40       	sbci	r25, 0x00	; 0
 1c6:	e1 f7       	brne	.-8      	; 0x1c0 <contador_dsc+0x3c>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <contador_dsc+0x46>
 1ca:	00 00       	nop
	_delay_ms(TIEMPO);
	LED1_ON;
 1cc:	88 b1       	in	r24, 0x08	; 8
 1ce:	88 60       	ori	r24, 0x08	; 8
 1d0:	88 b9       	out	0x08, r24	; 8
 1d2:	2f ef       	ldi	r18, 0xFF	; 255
 1d4:	87 e8       	ldi	r24, 0x87	; 135
 1d6:	93 e1       	ldi	r25, 0x13	; 19
 1d8:	21 50       	subi	r18, 0x01	; 1
 1da:	80 40       	sbci	r24, 0x00	; 0
 1dc:	90 40       	sbci	r25, 0x00	; 0
 1de:	e1 f7       	brne	.-8      	; 0x1d8 <contador_dsc+0x54>
 1e0:	00 c0       	rjmp	.+0      	; 0x1e2 <contador_dsc+0x5e>
 1e2:	00 00       	nop
	_delay_ms(TIEMPO);
	LED4_OFF;
 1e4:	85 b1       	in	r24, 0x05	; 5
 1e6:	8d 7f       	andi	r24, 0xFD	; 253
 1e8:	85 b9       	out	0x05, r24	; 5
	LED3_OFF;
 1ea:	88 b1       	in	r24, 0x08	; 8
 1ec:	8f 7d       	andi	r24, 0xDF	; 223
 1ee:	88 b9       	out	0x08, r24	; 8
	LED2_OFF;
 1f0:	88 b1       	in	r24, 0x08	; 8
 1f2:	8f 7e       	andi	r24, 0xEF	; 239
 1f4:	88 b9       	out	0x08, r24	; 8
	LED1_OFF;
 1f6:	88 b1       	in	r24, 0x08	; 8
 1f8:	87 7f       	andi	r24, 0xF7	; 247
 1fa:	88 b9       	out	0x08, r24	; 8
 1fc:	2f ef       	ldi	r18, 0xFF	; 255
 1fe:	87 e8       	ldi	r24, 0x87	; 135
 200:	93 e1       	ldi	r25, 0x13	; 19
 202:	21 50       	subi	r18, 0x01	; 1
 204:	80 40       	sbci	r24, 0x00	; 0
 206:	90 40       	sbci	r25, 0x00	; 0
 208:	e1 f7       	brne	.-8      	; 0x202 <contador_dsc+0x7e>
 20a:	00 c0       	rjmp	.+0      	; 0x20c <contador_dsc+0x88>
 20c:	00 00       	nop
 20e:	08 95       	ret

00000210 <LED_extremos>:
	_delay_ms(TIEMPO);

}
void LED_extremos()//
{
	LED1_OFF;
 210:	88 b1       	in	r24, 0x08	; 8
 212:	87 7f       	andi	r24, 0xF7	; 247
 214:	88 b9       	out	0x08, r24	; 8
	LED2_ON;
 216:	88 b1       	in	r24, 0x08	; 8
 218:	80 61       	ori	r24, 0x10	; 16
 21a:	88 b9       	out	0x08, r24	; 8
	LED3_ON;
 21c:	88 b1       	in	r24, 0x08	; 8
 21e:	80 62       	ori	r24, 0x20	; 32
 220:	88 b9       	out	0x08, r24	; 8
	LED4_OFF;
 222:	85 b1       	in	r24, 0x05	; 5
 224:	8d 7f       	andi	r24, 0xFD	; 253
 226:	85 b9       	out	0x05, r24	; 5
 228:	08 95       	ret

0000022a <STOP>:
	_delay_ms(TIEMPO);

}
void STOP()//
{
	LED1_OFF;
 22a:	88 b1       	in	r24, 0x08	; 8
 22c:	87 7f       	andi	r24, 0xF7	; 247
 22e:	88 b9       	out	0x08, r24	; 8
	LED2_OFF;
 230:	88 b1       	in	r24, 0x08	; 8
 232:	8f 7e       	andi	r24, 0xEF	; 239
 234:	88 b9       	out	0x08, r24	; 8
	LED3_OFF;
 236:	88 b1       	in	r24, 0x08	; 8
 238:	8f 7d       	andi	r24, 0xDF	; 223
 23a:	88 b9       	out	0x08, r24	; 8
	LED4_OFF;
 23c:	85 b1       	in	r24, 0x05	; 5
 23e:	8d 7f       	andi	r24, 0xFD	; 253
 240:	85 b9       	out	0x05, r24	; 5
	SEGA_OFF;
 242:	8b b1       	in	r24, 0x0b	; 11
 244:	8b 7f       	andi	r24, 0xFB	; 251
 246:	8b b9       	out	0x0b, r24	; 11
	SEGB_OFF;
 248:	8b b1       	in	r24, 0x0b	; 11
 24a:	87 7f       	andi	r24, 0xF7	; 247
 24c:	8b b9       	out	0x0b, r24	; 11
	SEGC_OFF;
 24e:	8b b1       	in	r24, 0x0b	; 11
 250:	8f 7e       	andi	r24, 0xEF	; 239
 252:	8b b9       	out	0x0b, r24	; 11
	SEGD_OFF;
 254:	8b b1       	in	r24, 0x0b	; 11
 256:	8f 7d       	andi	r24, 0xDF	; 223
 258:	8b b9       	out	0x0b, r24	; 11
	SEGE_OFF;
 25a:	8b b1       	in	r24, 0x0b	; 11
 25c:	8f 7b       	andi	r24, 0xBF	; 191
 25e:	8b b9       	out	0x0b, r24	; 11
	SEGF_OFF;
 260:	8b b1       	in	r24, 0x0b	; 11
 262:	8f 77       	andi	r24, 0x7F	; 127
 264:	8b b9       	out	0x0b, r24	; 11
	SEGG_OFF;
 266:	85 b1       	in	r24, 0x05	; 5
 268:	8e 7f       	andi	r24, 0xFE	; 254
 26a:	85 b9       	out	0x05, r24	; 5
 26c:	08 95       	ret

0000026e <show_number>:

}
void show_number(uint8_t var)
{
	switch (var)
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	fc 01       	movw	r30, r24
 272:	31 97       	sbiw	r30, 0x01	; 1
 274:	e7 30       	cpi	r30, 0x07	; 7
 276:	f1 05       	cpc	r31, r1
 278:	08 f0       	brcs	.+2      	; 0x27c <show_number+0xe>
 27a:	9c c0       	rjmp	.+312    	; 0x3b4 <show_number+0x146>
 27c:	ec 5c       	subi	r30, 0xCC	; 204
 27e:	ff 4f       	sbci	r31, 0xFF	; 255
 280:	0c 94 40 02 	jmp	0x480	; 0x480 <__tablejump2__>
	{
		case 1: //p
		SEGA_ON;
 284:	8b b1       	in	r24, 0x0b	; 11
 286:	84 60       	ori	r24, 0x04	; 4
 288:	8b b9       	out	0x0b, r24	; 11
		SEGB_ON;
 28a:	8b b1       	in	r24, 0x0b	; 11
 28c:	88 60       	ori	r24, 0x08	; 8
 28e:	8b b9       	out	0x0b, r24	; 11
		SEGC_OFF;
 290:	8b b1       	in	r24, 0x0b	; 11
 292:	8f 7e       	andi	r24, 0xEF	; 239
 294:	8b b9       	out	0x0b, r24	; 11
		SEGD_OFF;
 296:	8b b1       	in	r24, 0x0b	; 11
 298:	8f 7d       	andi	r24, 0xDF	; 223
 29a:	8b b9       	out	0x0b, r24	; 11
		SEGE_ON;
 29c:	8b b1       	in	r24, 0x0b	; 11
 29e:	80 64       	ori	r24, 0x40	; 64
 2a0:	8b b9       	out	0x0b, r24	; 11
		SEGF_ON;
 2a2:	8b b1       	in	r24, 0x0b	; 11
 2a4:	80 68       	ori	r24, 0x80	; 128
 2a6:	8b b9       	out	0x0b, r24	; 11
		SEGG_ON;
 2a8:	85 b1       	in	r24, 0x05	; 5
 2aa:	81 60       	ori	r24, 0x01	; 1
 2ac:	85 b9       	out	0x05, r24	; 5
		break;
 2ae:	08 95       	ret
		case 2: // d
		SEGA_OFF;
 2b0:	8b b1       	in	r24, 0x0b	; 11
 2b2:	8b 7f       	andi	r24, 0xFB	; 251
 2b4:	8b b9       	out	0x0b, r24	; 11
		SEGB_ON;
 2b6:	8b b1       	in	r24, 0x0b	; 11
 2b8:	88 60       	ori	r24, 0x08	; 8
 2ba:	8b b9       	out	0x0b, r24	; 11
		SEGC_ON;
 2bc:	8b b1       	in	r24, 0x0b	; 11
 2be:	80 61       	ori	r24, 0x10	; 16
 2c0:	8b b9       	out	0x0b, r24	; 11
		SEGD_ON;
 2c2:	8b b1       	in	r24, 0x0b	; 11
 2c4:	80 62       	ori	r24, 0x20	; 32
 2c6:	8b b9       	out	0x0b, r24	; 11
		SEGE_ON;
 2c8:	8b b1       	in	r24, 0x0b	; 11
 2ca:	80 64       	ori	r24, 0x40	; 64
 2cc:	8b b9       	out	0x0b, r24	; 11
		SEGF_OFF;
 2ce:	8b b1       	in	r24, 0x0b	; 11
 2d0:	8f 77       	andi	r24, 0x7F	; 127
 2d2:	8b b9       	out	0x0b, r24	; 11
		SEGG_ON;
 2d4:	85 b1       	in	r24, 0x05	; 5
 2d6:	81 60       	ori	r24, 0x01	; 1
 2d8:	85 b9       	out	0x05, r24	; 5
		break;
 2da:	08 95       	ret
		case 3: //A
		SEGA_ON;
 2dc:	8b b1       	in	r24, 0x0b	; 11
 2de:	84 60       	ori	r24, 0x04	; 4
 2e0:	8b b9       	out	0x0b, r24	; 11
		SEGB_ON;
 2e2:	8b b1       	in	r24, 0x0b	; 11
 2e4:	88 60       	ori	r24, 0x08	; 8
 2e6:	8b b9       	out	0x0b, r24	; 11
		SEGC_ON;
 2e8:	8b b1       	in	r24, 0x0b	; 11
 2ea:	80 61       	ori	r24, 0x10	; 16
 2ec:	8b b9       	out	0x0b, r24	; 11
		SEGD_OFF;
 2ee:	8b b1       	in	r24, 0x0b	; 11
 2f0:	8f 7d       	andi	r24, 0xDF	; 223
 2f2:	8b b9       	out	0x0b, r24	; 11
		SEGE_ON;
 2f4:	8b b1       	in	r24, 0x0b	; 11
 2f6:	80 64       	ori	r24, 0x40	; 64
 2f8:	8b b9       	out	0x0b, r24	; 11
		SEGF_ON;
 2fa:	8b b1       	in	r24, 0x0b	; 11
 2fc:	80 68       	ori	r24, 0x80	; 128
 2fe:	8b b9       	out	0x0b, r24	; 11
		SEGG_ON;
 300:	85 b1       	in	r24, 0x05	; 5
 302:	81 60       	ori	r24, 0x01	; 1
 304:	85 b9       	out	0x05, r24	; 5
		break;
 306:	08 95       	ret
		case 4: //0
		SEGA_ON;
 308:	8b b1       	in	r24, 0x0b	; 11
 30a:	84 60       	ori	r24, 0x04	; 4
 30c:	8b b9       	out	0x0b, r24	; 11
		SEGB_ON;
 30e:	8b b1       	in	r24, 0x0b	; 11
 310:	88 60       	ori	r24, 0x08	; 8
 312:	8b b9       	out	0x0b, r24	; 11
		SEGC_ON;
 314:	8b b1       	in	r24, 0x0b	; 11
 316:	80 61       	ori	r24, 0x10	; 16
 318:	8b b9       	out	0x0b, r24	; 11
		SEGD_ON;
 31a:	8b b1       	in	r24, 0x0b	; 11
 31c:	80 62       	ori	r24, 0x20	; 32
 31e:	8b b9       	out	0x0b, r24	; 11
		SEGE_ON;
 320:	8b b1       	in	r24, 0x0b	; 11
 322:	80 64       	ori	r24, 0x40	; 64
 324:	8b b9       	out	0x0b, r24	; 11
		SEGF_ON;
 326:	8b b1       	in	r24, 0x0b	; 11
 328:	80 68       	ori	r24, 0x80	; 128
 32a:	8b b9       	out	0x0b, r24	; 11
		SEGG_OFF;
 32c:	85 b1       	in	r24, 0x05	; 5
 32e:	8e 7f       	andi	r24, 0xFE	; 254
 330:	85 b9       	out	0x05, r24	; 5
		break;
 332:	08 95       	ret
		case 5: //1
		SEGA_OFF;
 334:	8b b1       	in	r24, 0x0b	; 11
 336:	8b 7f       	andi	r24, 0xFB	; 251
 338:	8b b9       	out	0x0b, r24	; 11
		SEGB_ON;
 33a:	8b b1       	in	r24, 0x0b	; 11
 33c:	88 60       	ori	r24, 0x08	; 8
 33e:	8b b9       	out	0x0b, r24	; 11
		SEGC_ON;
 340:	8b b1       	in	r24, 0x0b	; 11
 342:	80 61       	ori	r24, 0x10	; 16
 344:	8b b9       	out	0x0b, r24	; 11
		SEGD_OFF;
 346:	8b b1       	in	r24, 0x0b	; 11
 348:	8f 7d       	andi	r24, 0xDF	; 223
 34a:	8b b9       	out	0x0b, r24	; 11
		SEGE_OFF;
 34c:	8b b1       	in	r24, 0x0b	; 11
 34e:	8f 7b       	andi	r24, 0xBF	; 191
 350:	8b b9       	out	0x0b, r24	; 11
		SEGF_OFF;
 352:	8b b1       	in	r24, 0x0b	; 11
 354:	8f 77       	andi	r24, 0x7F	; 127
 356:	8b b9       	out	0x0b, r24	; 11
		SEGG_OFF;
 358:	85 b1       	in	r24, 0x05	; 5
 35a:	8e 7f       	andi	r24, 0xFE	; 254
 35c:	85 b9       	out	0x05, r24	; 5
		case 6: //2
		SEGA_ON;
 35e:	8b b1       	in	r24, 0x0b	; 11
 360:	84 60       	ori	r24, 0x04	; 4
 362:	8b b9       	out	0x0b, r24	; 11
		SEGB_ON;
 364:	8b b1       	in	r24, 0x0b	; 11
 366:	88 60       	ori	r24, 0x08	; 8
 368:	8b b9       	out	0x0b, r24	; 11
		SEGC_OFF;
 36a:	8b b1       	in	r24, 0x0b	; 11
 36c:	8f 7e       	andi	r24, 0xEF	; 239
 36e:	8b b9       	out	0x0b, r24	; 11
		SEGD_ON;
 370:	8b b1       	in	r24, 0x0b	; 11
 372:	80 62       	ori	r24, 0x20	; 32
 374:	8b b9       	out	0x0b, r24	; 11
		SEGE_ON;
 376:	8b b1       	in	r24, 0x0b	; 11
 378:	80 64       	ori	r24, 0x40	; 64
 37a:	8b b9       	out	0x0b, r24	; 11
		SEGF_OFF;
 37c:	8b b1       	in	r24, 0x0b	; 11
 37e:	8f 77       	andi	r24, 0x7F	; 127
 380:	8b b9       	out	0x0b, r24	; 11
		SEGG_ON;
 382:	85 b1       	in	r24, 0x05	; 5
 384:	81 60       	ori	r24, 0x01	; 1
 386:	85 b9       	out	0x05, r24	; 5
		break;
 388:	08 95       	ret
		case 7: //3
		SEGA_ON;
 38a:	8b b1       	in	r24, 0x0b	; 11
 38c:	84 60       	ori	r24, 0x04	; 4
 38e:	8b b9       	out	0x0b, r24	; 11
		SEGB_ON;
 390:	8b b1       	in	r24, 0x0b	; 11
 392:	88 60       	ori	r24, 0x08	; 8
 394:	8b b9       	out	0x0b, r24	; 11
		SEGC_ON;
 396:	8b b1       	in	r24, 0x0b	; 11
 398:	80 61       	ori	r24, 0x10	; 16
 39a:	8b b9       	out	0x0b, r24	; 11
		SEGD_ON;
 39c:	8b b1       	in	r24, 0x0b	; 11
 39e:	80 62       	ori	r24, 0x20	; 32
 3a0:	8b b9       	out	0x0b, r24	; 11
		SEGE_OFF;
 3a2:	8b b1       	in	r24, 0x0b	; 11
 3a4:	8f 7b       	andi	r24, 0xBF	; 191
 3a6:	8b b9       	out	0x0b, r24	; 11
		SEGF_OFF;
 3a8:	8b b1       	in	r24, 0x0b	; 11
 3aa:	8f 77       	andi	r24, 0x7F	; 127
 3ac:	8b b9       	out	0x0b, r24	; 11
		SEGG_ON;
 3ae:	85 b1       	in	r24, 0x05	; 5
 3b0:	81 60       	ori	r24, 0x01	; 1
 3b2:	85 b9       	out	0x05, r24	; 5
 3b4:	08 95       	ret

000003b6 <contador_num>:
	LED4_OFF;

}
void contador_num()//
{
	show_number(4);
 3b6:	84 e0       	ldi	r24, 0x04	; 4
 3b8:	0e 94 37 01 	call	0x26e	; 0x26e <show_number>
 3bc:	2f ef       	ldi	r18, 0xFF	; 255
 3be:	87 e8       	ldi	r24, 0x87	; 135
 3c0:	93 e1       	ldi	r25, 0x13	; 19
 3c2:	21 50       	subi	r18, 0x01	; 1
 3c4:	80 40       	sbci	r24, 0x00	; 0
 3c6:	90 40       	sbci	r25, 0x00	; 0
 3c8:	e1 f7       	brne	.-8      	; 0x3c2 <contador_num+0xc>
 3ca:	00 c0       	rjmp	.+0      	; 0x3cc <contador_num+0x16>
 3cc:	00 00       	nop
	_delay_ms(TIEMPO);
	show_number(5);
 3ce:	85 e0       	ldi	r24, 0x05	; 5
 3d0:	0e 94 37 01 	call	0x26e	; 0x26e <show_number>
 3d4:	2f ef       	ldi	r18, 0xFF	; 255
 3d6:	87 e8       	ldi	r24, 0x87	; 135
 3d8:	93 e1       	ldi	r25, 0x13	; 19
 3da:	21 50       	subi	r18, 0x01	; 1
 3dc:	80 40       	sbci	r24, 0x00	; 0
 3de:	90 40       	sbci	r25, 0x00	; 0
 3e0:	e1 f7       	brne	.-8      	; 0x3da <contador_num+0x24>
 3e2:	00 c0       	rjmp	.+0      	; 0x3e4 <contador_num+0x2e>
 3e4:	00 00       	nop
	_delay_ms(TIEMPO);
	show_number(6);
 3e6:	86 e0       	ldi	r24, 0x06	; 6
 3e8:	0e 94 37 01 	call	0x26e	; 0x26e <show_number>
 3ec:	2f ef       	ldi	r18, 0xFF	; 255
 3ee:	87 e8       	ldi	r24, 0x87	; 135
 3f0:	93 e1       	ldi	r25, 0x13	; 19
 3f2:	21 50       	subi	r18, 0x01	; 1
 3f4:	80 40       	sbci	r24, 0x00	; 0
 3f6:	90 40       	sbci	r25, 0x00	; 0
 3f8:	e1 f7       	brne	.-8      	; 0x3f2 <contador_num+0x3c>
 3fa:	00 c0       	rjmp	.+0      	; 0x3fc <contador_num+0x46>
 3fc:	00 00       	nop
	_delay_ms(TIEMPO);
	show_number(7);
 3fe:	87 e0       	ldi	r24, 0x07	; 7
 400:	0e 94 37 01 	call	0x26e	; 0x26e <show_number>
 404:	2f ef       	ldi	r18, 0xFF	; 255
 406:	87 e8       	ldi	r24, 0x87	; 135
 408:	93 e1       	ldi	r25, 0x13	; 19
 40a:	21 50       	subi	r18, 0x01	; 1
 40c:	80 40       	sbci	r24, 0x00	; 0
 40e:	90 40       	sbci	r25, 0x00	; 0
 410:	e1 f7       	brne	.-8      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 412:	00 c0       	rjmp	.+0      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 414:	00 00       	nop
 416:	08 95       	ret

00000418 <main>:
void STOP();//motor_FastTOP()

//-----Main--------
int main(void)
{
	init_ports();
 418:	0e 94 47 00 	call	0x8e	; 0x8e <init_ports>

	while (1)
	{
		if (!BTN_0_PRESS&&!BTN_1_PRESS&&!BTN_2_PRESS) //000 - Ningun boton presionado
 41c:	30 99       	sbic	0x06, 0	; 6
 41e:	0a c0       	rjmp	.+20     	; 0x434 <main+0x1c>
 420:	31 99       	sbic	0x06, 1	; 6
 422:	08 c0       	rjmp	.+16     	; 0x434 <main+0x1c>
 424:	32 99       	sbic	0x06, 2	; 6
 426:	06 c0       	rjmp	.+12     	; 0x434 <main+0x1c>
		{
			LED_prendidos();
 428:	0e 94 6f 00 	call	0xde	; 0xde <LED_prendidos>
			show_number(1);
 42c:	81 e0       	ldi	r24, 0x01	; 1
 42e:	0e 94 37 01 	call	0x26e	; 0x26e <show_number>
 432:	f4 cf       	rjmp	.-24     	; 0x41c <main+0x4>
		}
		else if(!BTN_0_PRESS&&!BTN_1_PRESS&&BTN_2_PRESS) //001 -
 434:	30 99       	sbic	0x06, 0	; 6
 436:	0a c0       	rjmp	.+20     	; 0x44c <main+0x34>
 438:	31 99       	sbic	0x06, 1	; 6
 43a:	08 c0       	rjmp	.+16     	; 0x44c <main+0x34>
 43c:	32 9b       	sbis	0x06, 2	; 6
 43e:	06 c0       	rjmp	.+12     	; 0x44c <main+0x34>
		{
			contador_asc();
 440:	0e 94 7c 00 	call	0xf8	; 0xf8 <contador_asc>
			show_number(2);
 444:	82 e0       	ldi	r24, 0x02	; 2
 446:	0e 94 37 01 	call	0x26e	; 0x26e <show_number>
 44a:	e8 cf       	rjmp	.-48     	; 0x41c <main+0x4>
		}
		else if (!BTN_0_PRESS&&BTN_1_PRESS&&!BTN_2_PRESS) //010
 44c:	30 99       	sbic	0x06, 0	; 6
 44e:	0a c0       	rjmp	.+20     	; 0x464 <main+0x4c>
 450:	31 9b       	sbis	0x06, 1	; 6
 452:	08 c0       	rjmp	.+16     	; 0x464 <main+0x4c>
 454:	32 99       	sbic	0x06, 2	; 6
 456:	06 c0       	rjmp	.+12     	; 0x464 <main+0x4c>
		{
			contador_dsc();
 458:	0e 94 c2 00 	call	0x184	; 0x184 <contador_dsc>
			show_number(3);
 45c:	83 e0       	ldi	r24, 0x03	; 3
 45e:	0e 94 37 01 	call	0x26e	; 0x26e <show_number>
 462:	dc cf       	rjmp	.-72     	; 0x41c <main+0x4>
		}
		else if (!BTN_0_PRESS&&BTN_1_PRESS&&BTN_2_PRESS) //011 -
 464:	30 99       	sbic	0x06, 0	; 6
 466:	09 c0       	rjmp	.+18     	; 0x47a <main+0x62>
 468:	31 9b       	sbis	0x06, 1	; 6
 46a:	07 c0       	rjmp	.+14     	; 0x47a <main+0x62>
 46c:	32 9b       	sbis	0x06, 2	; 6
 46e:	05 c0       	rjmp	.+10     	; 0x47a <main+0x62>
		{
			LED_extremos();
 470:	0e 94 08 01 	call	0x210	; 0x210 <LED_extremos>
			contador_num();
 474:	0e 94 db 01 	call	0x3b6	; 0x3b6 <contador_num>
 478:	d1 cf       	rjmp	.-94     	; 0x41c <main+0x4>
		}
		else //1XX - stop
		{
			STOP();
 47a:	0e 94 15 01 	call	0x22a	; 0x22a <STOP>
 47e:	ce cf       	rjmp	.-100    	; 0x41c <main+0x4>

00000480 <__tablejump2__>:
 480:	ee 0f       	add	r30, r30
 482:	ff 1f       	adc	r31, r31
 484:	05 90       	lpm	r0, Z+
 486:	f4 91       	lpm	r31, Z
 488:	e0 2d       	mov	r30, r0
 48a:	09 94       	ijmp

0000048c <_exit>:
 48c:	f8 94       	cli

0000048e <__stop_program>:
 48e:	ff cf       	rjmp	.-2      	; 0x48e <__stop_program>
