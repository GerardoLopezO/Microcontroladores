
AF2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000266  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000212  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000266  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000298  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000002d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008af  00000000  00000000  00000300  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000683  00000000  00000000  00000baf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003ba  00000000  00000000  00001232  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  000015ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000399  00000000  00000000  00001620  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000240  00000000  00000000  000019b9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001bf9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 59 00 	call	0xb2	; 0xb2 <main>
  78:	0c 94 07 01 	jmp	0x20e	; 0x20e <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <ports_init>:

void ports_init(void)
{
//-- Definir entradas y salidas
//- Inputs (colocamos 0)
	BTN_DDRX &= ~(1<<BTN_0); // solo PORTD4  es una entrada el & ~(1<<PORTD4) = 0
  80:	8a b1       	in	r24, 0x0a	; 10
  82:	8f 7e       	andi	r24, 0xEF	; 239
  84:	8a b9       	out	0x0a, r24	; 10
	BTN_DDRX &= ~(1<<BTN_1); // solo PORTD3 es una entrada
  86:	8a b1       	in	r24, 0x0a	; 10
  88:	87 7f       	andi	r24, 0xF7	; 247
  8a:	8a b9       	out	0x0a, r24	; 10
	
// - Outputs (colocamos 1)
	LED_DDRX |= (1<<LED_0); // solo PORTB4 es una salida el | (1<<PORTB4) = 1
  8c:	84 b1       	in	r24, 0x04	; 4
  8e:	84 60       	ori	r24, 0x04	; 4
  90:	84 b9       	out	0x04, r24	; 4
	LED_DDRX |= (1<<LED_1);// Solo PORTB3 es una salida
  92:	84 b1       	in	r24, 0x04	; 4
  94:	88 60       	ori	r24, 0x08	; 8
  96:	84 b9       	out	0x04, r24	; 4
	
//-- Init Entrada y Salidas
//- Inputs
	BTN_PORTX &= ~(1<<BTN_0);// Pull- down 
  98:	8b b1       	in	r24, 0x0b	; 11
  9a:	8f 7e       	andi	r24, 0xEF	; 239
  9c:	8b b9       	out	0x0b, r24	; 11
	BTN_PORTX &= ~(1<<BTN_1);// Pull- down 
  9e:	8b b1       	in	r24, 0x0b	; 11
  a0:	87 7f       	andi	r24, 0xF7	; 247
  a2:	8b b9       	out	0x0b, r24	; 11
	
//-Outputs
	LED_PORTX &= ~(1<<LED_0);// Output low (sink)
  a4:	85 b1       	in	r24, 0x05	; 5
  a6:	8b 7f       	andi	r24, 0xFB	; 251
  a8:	85 b9       	out	0x05, r24	; 5
	LED_PORTX &= ~(1<<LED_1);// Output low (sink)
  aa:	85 b1       	in	r24, 0x05	; 5
  ac:	87 7f       	andi	r24, 0xF7	; 247
  ae:	85 b9       	out	0x05, r24	; 5
  b0:	08 95       	ret

000000b2 <main>:

// ------- MAIN -------- //
int main(void)
{
// ---- Inits-----//
	ports_init();//llama la funcion
  b2:	0e 94 40 00 	call	0x80	; 0x80 <ports_init>
	
//----- Event Loop----//
while(1)
{
      //00
  	  if(!BTN_1_PRESS&&!BTN_0_PRESS)// 
  b6:	4b 99       	sbic	0x09, 3	; 9
  b8:	5d c0       	rjmp	.+186    	; 0x174 <main+0xc2>
  ba:	4c 99       	sbic	0x09, 4	; 9
  bc:	5b c0       	rjmp	.+182    	; 0x174 <main+0xc2>
      {
        	
                // 8421 8421
                //Ob0000_0000;
                LED_0_ON;// prender el led 
  be:	85 b1       	in	r24, 0x05	; 5
  c0:	84 60       	ori	r24, 0x04	; 4
  c2:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c4:	2f ef       	ldi	r18, 0xFF	; 255
  c6:	89 e6       	ldi	r24, 0x69	; 105
  c8:	98 e1       	ldi	r25, 0x18	; 24
  ca:	21 50       	subi	r18, 0x01	; 1
  cc:	80 40       	sbci	r24, 0x00	; 0
  ce:	90 40       	sbci	r25, 0x00	; 0
  d0:	e1 f7       	brne	.-8      	; 0xca <main+0x18>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <main+0x22>
  d4:	00 00       	nop
                _delay_ms(TIEMPO);//retardo  
                LED_0_OFF;//apagar el led
  d6:	85 b1       	in	r24, 0x05	; 5
  d8:	8b 7f       	andi	r24, 0xFB	; 251
  da:	85 b9       	out	0x05, r24	; 5
                LED_1_ON;// 
  dc:	85 b1       	in	r24, 0x05	; 5
  de:	88 60       	ori	r24, 0x08	; 8
  e0:	85 b9       	out	0x05, r24	; 5
  e2:	2f ef       	ldi	r18, 0xFF	; 255
  e4:	89 e6       	ldi	r24, 0x69	; 105
  e6:	98 e1       	ldi	r25, 0x18	; 24
  e8:	21 50       	subi	r18, 0x01	; 1
  ea:	80 40       	sbci	r24, 0x00	; 0
  ec:	90 40       	sbci	r25, 0x00	; 0
  ee:	e1 f7       	brne	.-8      	; 0xe8 <main+0x36>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <main+0x40>
  f2:	00 00       	nop
                _delay_ms(TIEMPO);// 
                LED_1_OFF;
  f4:	85 b1       	in	r24, 0x05	; 5
  f6:	87 7f       	andi	r24, 0xF7	; 247
  f8:	85 b9       	out	0x05, r24	; 5
                LED_2_ON;//  
  fa:	85 b1       	in	r24, 0x05	; 5
  fc:	80 61       	ori	r24, 0x10	; 16
  fe:	85 b9       	out	0x05, r24	; 5
 100:	2f ef       	ldi	r18, 0xFF	; 255
 102:	89 e6       	ldi	r24, 0x69	; 105
 104:	98 e1       	ldi	r25, 0x18	; 24
 106:	21 50       	subi	r18, 0x01	; 1
 108:	80 40       	sbci	r24, 0x00	; 0
 10a:	90 40       	sbci	r25, 0x00	; 0
 10c:	e1 f7       	brne	.-8      	; 0x106 <main+0x54>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <main+0x5e>
 110:	00 00       	nop
                _delay_ms(TIEMPO);// 
                LED_2_OFF;
 112:	85 b1       	in	r24, 0x05	; 5
 114:	8f 7e       	andi	r24, 0xEF	; 239
 116:	85 b9       	out	0x05, r24	; 5
                LED_3_ON;// o 
 118:	85 b1       	in	r24, 0x05	; 5
 11a:	80 62       	ori	r24, 0x20	; 32
 11c:	85 b9       	out	0x05, r24	; 5
 11e:	2f ef       	ldi	r18, 0xFF	; 255
 120:	89 e6       	ldi	r24, 0x69	; 105
 122:	98 e1       	ldi	r25, 0x18	; 24
 124:	21 50       	subi	r18, 0x01	; 1
 126:	80 40       	sbci	r24, 0x00	; 0
 128:	90 40       	sbci	r25, 0x00	; 0
 12a:	e1 f7       	brne	.-8      	; 0x124 <main+0x72>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <main+0x7c>
 12e:	00 00       	nop
                _delay_ms(TIEMPO);// 
                LED_3_OFF;
 130:	85 b1       	in	r24, 0x05	; 5
 132:	8f 7d       	andi	r24, 0xDF	; 223
 134:	85 b9       	out	0x05, r24	; 5
                LED_2_ON;//regreso del led 4
 136:	85 b1       	in	r24, 0x05	; 5
 138:	80 61       	ori	r24, 0x10	; 16
 13a:	85 b9       	out	0x05, r24	; 5
 13c:	2f ef       	ldi	r18, 0xFF	; 255
 13e:	89 e6       	ldi	r24, 0x69	; 105
 140:	98 e1       	ldi	r25, 0x18	; 24
 142:	21 50       	subi	r18, 0x01	; 1
 144:	80 40       	sbci	r24, 0x00	; 0
 146:	90 40       	sbci	r25, 0x00	; 0
 148:	e1 f7       	brne	.-8      	; 0x142 <main+0x90>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <main+0x9a>
 14c:	00 00       	nop
                _delay_ms(TIEMPO);//retardo  
                LED_2_OFF;
 14e:	85 b1       	in	r24, 0x05	; 5
 150:	8f 7e       	andi	r24, 0xEF	; 239
 152:	85 b9       	out	0x05, r24	; 5
                LED_1_ON;// regreso del led 3
 154:	85 b1       	in	r24, 0x05	; 5
 156:	88 60       	ori	r24, 0x08	; 8
 158:	85 b9       	out	0x05, r24	; 5
 15a:	2f ef       	ldi	r18, 0xFF	; 255
 15c:	89 e6       	ldi	r24, 0x69	; 105
 15e:	98 e1       	ldi	r25, 0x18	; 24
 160:	21 50       	subi	r18, 0x01	; 1
 162:	80 40       	sbci	r24, 0x00	; 0
 164:	90 40       	sbci	r25, 0x00	; 0
 166:	e1 f7       	brne	.-8      	; 0x160 <main+0xae>
 168:	00 c0       	rjmp	.+0      	; 0x16a <main+0xb8>
 16a:	00 00       	nop
                _delay_ms(TIEMPO);//retardo  
                LED_1_OFF;
 16c:	85 b1       	in	r24, 0x05	; 5
 16e:	87 7f       	andi	r24, 0xF7	; 247
 170:	85 b9       	out	0x05, r24	; 5
 172:	a1 cf       	rjmp	.-190    	; 0xb6 <main+0x4>
          	
       }
  	  //01
        else if (!BTN_1_PRESS&& BTN_0_PRESS)
 174:	4b 99       	sbic	0x09, 3	; 9
 176:	0f c0       	rjmp	.+30     	; 0x196 <main+0xe4>
 178:	4c 9b       	sbis	0x09, 4	; 9
 17a:	0d c0       	rjmp	.+26     	; 0x196 <main+0xe4>
        {
          LED_1_OFF;// apagados LED_0
 17c:	85 b1       	in	r24, 0x05	; 5
 17e:	87 7f       	andi	r24, 0xF7	; 247
 180:	85 b9       	out	0x05, r24	; 5
          LED_0_OFF;
 182:	85 b1       	in	r24, 0x05	; 5
 184:	8b 7f       	andi	r24, 0xFB	; 251
 186:	85 b9       	out	0x05, r24	; 5
          LED_2_OFF;
 188:	85 b1       	in	r24, 0x05	; 5
 18a:	8f 7e       	andi	r24, 0xEF	; 239
 18c:	85 b9       	out	0x05, r24	; 5
          LED_3_OFF;
 18e:	85 b1       	in	r24, 0x05	; 5
 190:	8f 7d       	andi	r24, 0xDF	; 223
 192:	85 b9       	out	0x05, r24	; 5
 194:	90 cf       	rjmp	.-224    	; 0xb6 <main+0x4>
        }
       //10
          else if ( BTN_1_PRESS&&!BTN_0_PRESS)
 196:	4b 9b       	sbis	0x09, 3	; 9
 198:	2d c0       	rjmp	.+90     	; 0x1f4 <main+0x142>
 19a:	4c 99       	sbic	0x09, 4	; 9
 19c:	2b c0       	rjmp	.+86     	; 0x1f4 <main+0x142>
          {
            LED_0_ON;// apagados LED
 19e:	85 b1       	in	r24, 0x05	; 5
 1a0:	84 60       	ori	r24, 0x04	; 4
 1a2:	85 b9       	out	0x05, r24	; 5
            LED_3_ON;
 1a4:	85 b1       	in	r24, 0x05	; 5
 1a6:	80 62       	ori	r24, 0x20	; 32
 1a8:	85 b9       	out	0x05, r24	; 5
            LED_1_OFF;
 1aa:	85 b1       	in	r24, 0x05	; 5
 1ac:	87 7f       	andi	r24, 0xF7	; 247
 1ae:	85 b9       	out	0x05, r24	; 5
            LED_2_OFF;
 1b0:	85 b1       	in	r24, 0x05	; 5
 1b2:	8f 7e       	andi	r24, 0xEF	; 239
 1b4:	85 b9       	out	0x05, r24	; 5
 1b6:	2f ef       	ldi	r18, 0xFF	; 255
 1b8:	89 e6       	ldi	r24, 0x69	; 105
 1ba:	98 e1       	ldi	r25, 0x18	; 24
 1bc:	21 50       	subi	r18, 0x01	; 1
 1be:	80 40       	sbci	r24, 0x00	; 0
 1c0:	90 40       	sbci	r25, 0x00	; 0
 1c2:	e1 f7       	brne	.-8      	; 0x1bc <main+0x10a>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <main+0x114>
 1c6:	00 00       	nop
            _delay_ms(TIEMPO);//retardo 
            LED_0_OFF;// apagados LED
 1c8:	85 b1       	in	r24, 0x05	; 5
 1ca:	8b 7f       	andi	r24, 0xFB	; 251
 1cc:	85 b9       	out	0x05, r24	; 5
            LED_3_OFF;
 1ce:	85 b1       	in	r24, 0x05	; 5
 1d0:	8f 7d       	andi	r24, 0xDF	; 223
 1d2:	85 b9       	out	0x05, r24	; 5
            LED_1_ON;
 1d4:	85 b1       	in	r24, 0x05	; 5
 1d6:	88 60       	ori	r24, 0x08	; 8
 1d8:	85 b9       	out	0x05, r24	; 5
            LED_2_ON;
 1da:	85 b1       	in	r24, 0x05	; 5
 1dc:	80 61       	ori	r24, 0x10	; 16
 1de:	85 b9       	out	0x05, r24	; 5
 1e0:	2f ef       	ldi	r18, 0xFF	; 255
 1e2:	89 e6       	ldi	r24, 0x69	; 105
 1e4:	98 e1       	ldi	r25, 0x18	; 24
 1e6:	21 50       	subi	r18, 0x01	; 1
 1e8:	80 40       	sbci	r24, 0x00	; 0
 1ea:	90 40       	sbci	r25, 0x00	; 0
 1ec:	e1 f7       	brne	.-8      	; 0x1e6 <main+0x134>
 1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <main+0x13e>
 1f0:	00 00       	nop
 1f2:	61 cf       	rjmp	.-318    	; 0xb6 <main+0x4>
            _delay_ms(TIEMPO);//retardo 
          }
       //11
            else 
            {
              LED_1_ON;// enciendo LED_0
 1f4:	85 b1       	in	r24, 0x05	; 5
 1f6:	88 60       	ori	r24, 0x08	; 8
 1f8:	85 b9       	out	0x05, r24	; 5
          	  LED_0_ON;
 1fa:	85 b1       	in	r24, 0x05	; 5
 1fc:	84 60       	ori	r24, 0x04	; 4
 1fe:	85 b9       	out	0x05, r24	; 5
              LED_2_ON;
 200:	85 b1       	in	r24, 0x05	; 5
 202:	80 61       	ori	r24, 0x10	; 16
 204:	85 b9       	out	0x05, r24	; 5
              LED_3_ON;
 206:	85 b1       	in	r24, 0x05	; 5
 208:	80 62       	ori	r24, 0x20	; 32
 20a:	85 b9       	out	0x05, r24	; 5
 20c:	54 cf       	rjmp	.-344    	; 0xb6 <main+0x4>

0000020e <_exit>:
 20e:	f8 94       	cli

00000210 <__stop_program>:
 210:	ff cf       	rjmp	.-2      	; 0x210 <__stop_program>
